sudo yum install java-1.8.0-openjdk-devel -y & yum install wget -y

sudo groupadd -g 9082 cassandra
sudo useradd -u 9081 -g 9082 -d /home/cassandra cassandra 

passwd cassandra


sudo mkdir -p /data/cassandra/data ## appending only
sudo mkdir -p /data/cassandra/saved_caches
sudo mkdir -p /data/cassandra/commitlog ## disaster recovery
sudo mkdir -p /data/cassandra/hints

sudo chown -R cassandra:cassandra /data/
sudo mkdir -p /var/log/cassandra
sudo mkdir -p /var/run/cassandra
sudo chown -R cassandra:cassandra /var/log/cassandra
sudo chown -R cassandra:cassandra /var/run/cassandra
sudo chown -R cassandra:cassandra /data/cassandra/hints
sudo chown -R cassandra:cassandra /data/cassandra/saved_caches
sudo chown -R cassandra:cassandra /data/cassandra/commitlog

sudo chown -R cassandra:cassandra /opt/

su - cassandra

wget https://archive.apache.org/dist/cassandra/3.11.5/apache-cassandra-3.11.5-bin.tar.gz

usermod -aG wheel cassandra

sudo wget https://archive.apache.org/dist/cassandra/4.1.7/apache-cassandra-4.1.7-bin.tar.gz


mv apache-cassandra-4.1.7-bin.tar.gz /opt/
cd

tar -xvf apache-cassandra-4.1.7-bin.tar.gz

cd /opt/apache-cassandra-4.1.7/conf
vi cassandra.yaml

listen_address: 192.168.17.143
rpc_address: 192.168.17.143

cluster_name: 'ams-cluster'

data_file_directories:
     - /data/cassandra/data
     
commitlog_directory: /data/cassandra/commitlog
saved_caches_directory: /data/cassandra/saved_caches
- seeds: 192.168.17.143

:wq!

===========================Shell Script==
#!/bin/bash
# from root user preferred
# Install necessary packages
sudo yum install -y java-1.8.0-openjdk-devel wget -q

# Create Cassandra group and user
sudo groupadd -g 9082 cassandra
sudo useradd -u 9081 -g 9082 -d /home/cassandra cassandra

# Set password for Cassandra user (manual input required)
echo "Setting password for cassandra user. Please enter a new password:"
sudo passwd cassandra

# Create necessary directories
sudo mkdir -p /data/cassandra/data
sudo mkdir -p /data/cassandra/saved_caches
sudo mkdir -p /data/cassandra/commitlog
sudo mkdir -p /data/cassandra/hints
sudo mkdir -p /var/log/cassandra
sudo mkdir -p /var/run/cassandra

# Set ownership of directories to cassandra user
sudo chown -R cassandra:cassandra /data/
sudo chown -R cassandra:cassandra /var/log/cassandra
sudo chown -R cassandra:cassandra /var/run/cassandra
sudo chown -R cassandra:cassandra /opt/

# Add cassandra user to the wheel group
sudo usermod -aG wheel cassandra

# Switch to cassandra user and execute commands
sudo -u cassandra bash <<EOF

# Change to home directory
cd ~

# Download Apache Cassandra
wget https://archive.apache.org/dist/cassandra/4.1.7/apache-cassandra-4.1.7-bin.tar.gz

EOF

# Move and extract Cassandra archive (requires root permissions)
sudo mv /home/cassandra/apache-cassandra-4.1.7-bin.tar.gz /opt/
cd /opt/
sudo tar -xvf apache-cassandra-4.1.7-bin.tar.gz
sudo chown -R cassandra:cassandra /opt/apache-cassandra-4.1.7

# Switch back to cassandra user to configure
sudo -u cassandra bash <<EOF

# Define the Cassandra configuration file path
CONFIG_FILE="/opt/apache-cassandra-4.1.7/conf/cassandra.yaml"

# Ensure the file exists before modifying
if [ ! -f "\$CONFIG_FILE" ]; then
    echo "Error: cassandra.yaml not found at \$CONFIG_FILE"
    exit 1
fi

# Update configuration settings using sed
echo "Updating cassandra.yaml configuration..."

sed -i 's/^listen_address:.*/listen_address: 192.168.17.137/' "\$CONFIG_FILE"
sed -i 's/^rpc_address:.*/rpc_address: 192.168.17.137/' "\$CONFIG_FILE"
sed -i 's/^cluster_name:.*/cluster_name: "ams-cluster"/' "\$CONFIG_FILE"
sed -i 's|^# data_file_directories:.*|data_file_directories:\n     - /data/cassandra/data|' "\$CONFIG_FILE"
sed -i 's|^commitlog_directory:.*|commitlog_directory: /data/cassandra/commitlog|' "\$CONFIG_FILE"
sed -i 's|^saved_caches_directory:.*|saved_caches_directory: /data/cassandra/saved_caches|' "\$CONFIG_FILE"
sed -i 's|- seeds: .*|- seeds: "192.168.17.139"|' "\$CONFIG_FILE"

echo "Apache Cassandra 4.1.7 setup completed successfully!"

EOF


====removing the data to adding another node

[cassandra@server1 data]$ pwd
/data/cassandra/data
[cassandra@server1 data]$ rm -rf *

[cassandra@server1 cassandra]$ cd commitlog/
[cassandra@server1 commitlog]$ rm -ef *

[cassandra@server1 cassandra]$ cd saved_caches/
[cassandra@server1 saved_caches]$ rm -rf *

[cassandra@server1 cassandra]$ cd hints/
[cassandra@server1 hints]$ ls
[cassandra@server1 hints]$ 

cat cassandra.yaml | grep -E "seeds|rpc_address|listen_address|cluster_name"
cat /opt/apache-cassandra-4.1.7/conf/cassandra.yaml | grep -E "seeds|rpc_address|listen_address|cluster_name"


cd /data/cassandra/data
rm -rf *
cd /data/cassandra/commitlog
rm -rf *
cd /data/cassandra/saved_caches/
rm -rf *
cd /data/cassandra/hints
rm -rf *

========================
#!/bin/bash

# Directories to be cleared
directories=(
    "/data/cassandra/data"
    "/data/cassandra/commitlog"
    "/data/cassandra/saved_caches"
    "/data/cassandra/hints"
)

# Function to clear directory contents
clear_directory() {
    local dir="$1"
    if [ -d "$dir" ]; then
        echo "Clearing contents of $dir..."
        rm -rf "$dir"/*
        echo "Cleared: $dir"
    else
        echo "Directory $dir does not exist, skipping..."
    fi
}

# Loop through and clear each directory
for dir in "${directories[@]}"; do
    clear_directory "$dir"
done

echo "Cassandra data cleared successfully!"
=============================

[cassandra@server1 ~]$ cat /opt/apache-cassandra-4.1.7/conf/cassandra.yaml | grep -E "seeds|listen_address|rpc_address|seeds"
      # seeds is actually a comma-delimited list of addresses.
      - seeds: "192.168.17.143"
# Set listen_address OR listen_interface, not both.
# Setting listen_address to 0.0.0.0 is always wrong.
listen_address: 192.168.17.139
# Set listen_address OR listen_interface, not both. Interfaces must correspond
# Leaving this blank will set it to the same value as listen_address
# the listen_address, allowing nodes to communicate in both
# The address on which the native transport is bound is defined by rpc_address.
# Set rpc_address OR rpc_interface, not both.
# Leaving rpc_address blank has the same effect as on listen_address
# Note that unlike listen_address, you can specify 0.0.0.0, but you must also
# set broadcast_rpc_address to a value other than 0.0.0.0.
rpc_address: 192.168.17.139
# Set rpc_address OR rpc_interface, not both. Interfaces must correspond
# rpc_address. If rpc_address is set to 0.0.0.0, broadcast_rpc_address must
# broadcast_rpc_address: 1.2.3.4

all nodes in onprem
[root@centos07 ~]# systemctl stop firewalld
[root@centos07 ~]# systemctl disable firewalld

===.bash_profile
export CASSANDRA_HOME=/home/cassandra/Python-2.7.6/
export CASSANDRA_HOME=/opt/apache-cassandra-4.1.7/
export CASSANDRA_CONF=$CASSANDRA_HOME/conf
export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk/jre
export CASSANDRA_LOG=/var/log/cassandra/system.log
export TMP=/tmp
export TMPDIR=$TMP
export PATH=$PATH:$HOME/bin:$JAVA_HOME/bin:$CASSANDRA_HOME/bin:/opt/cassandra-sstable-tools/bin:.
export CLASSPATH=$JAVA_HOME:$JAVA_HOME/lib:$JAVA_HOME/jre/lib:$JAVA_HOME/jre/lib/ext:$CASSANDRA_HOME/lib:$CASSANDRA_CONF:$CASSANDRA_HOME/bin:.
alias casslog='tail -100f $CASSANDRA_LOG'

====Update only ip's in Cassandra.yaml file=====update_ips.sh===


#!/bin/bash

CONFIG_FILE="/opt/apache-cassandra-4.1.7/conf/cassandra.yaml"

# Define new values
SEEDS="192.168.17.101"
LISTEN_ADDRESS="192.168.17.102"
RPC_ADDRESS="192.168.17.102"

# Update cassandra.yaml
sudo sed -i "s/^ *- seeds: .*/        - seeds: \"$SEEDS\"/" "$CONFIG_FILE"
sudo sed -i "s/^listen_address: .*/listen_address: $LISTEN_ADDRESS/" "$CONFIG_FILE"
sudo sed -i "s/^rpc_address: .*/rpc_address: $RPC_ADDRESS/" "$CONFIG_FILE
